async function fetchAndDisplayBlogPosts() {
try{
const blogPostResponse =await fetch('/blogs/');
if(!blogPostResponse.ok){
throw new Error('Failed to fetch blog posts');
}
const blogPosts= await blogPostResponse.json();

await Promise.all(blogPosts.map(async(blogPost) =>{
const authorResponse =await fetch('/users/getUserByID/${blogPost.author}');
if(!authorResponse.ok){
throw new Error('Failed to fetch author details');
}
const authData= await authorResponse.json();
blogPost.authorName= authData.name;
}));

await Promise.all(blogPosts.map(async (blogPost) =>{
await Promise.all(blogPost.comments.map(async =>{
const userResponse = await fetch('/users/getUserByID/${comment.user}');
if(!userResponse.ok){
throw new Error('Failed to fetch our details');
}
const userData= await userResponse.json();
comment.userName= userData.name;
}));
}));
await displayBlogPost(blogPosts);
}catch(error){
console.error('Error fetching content', error.message);

}
}

async function displayBlogPost(blogPosts) {
const blogPostContainer = document.getElementById('blogPosts');
blogPostContainer.appendChild(cardElement);
})
}

function createBlogPostCard(blogPost){
const cardElement =document.createElement('div');
cardElement.classList.add('blog-post-card);

const TitleElement=document.createElement('h5);
titleElement.textContent =blogPost.title;

const authorElement=document.createElement('h5);
titleElement.textContent =blogPost.title;
const TitleElement=document.createElement('h5);
titleElement.textContent =blogPost.title;


